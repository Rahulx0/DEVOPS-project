apiVersion: apps/v1
kind: Deployment
metadata:
  name: urbangear-frontend
  namespace: default
  labels:
    app: urbangear-frontend
    environment: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: urbangear-frontend
  template:
    metadata:
      labels:
        app: urbangear-frontend
        environment: dev
    spec:
      containers:
      - name: frontend
        image: 484907531725.dkr.ecr.us-west-2.amazonaws.com/urbangear-dev-frontend:latest
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: urbangear-frontend-service
  namespace: default
  labels:
    app: urbangear-frontend
spec:
  selector:
    app: urbangear-frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: urbangear-frontend-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /
  labels:
    app: urbangear-frontend
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: urbangear-frontend-service
            port:
              number: 80