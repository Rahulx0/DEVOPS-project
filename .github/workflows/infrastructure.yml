name: Infrastructure Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'infra/terraform/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infra/terraform/**'

env:
  AWS_REGION: us-west-2
  TF_VERSION: 1.13.3

jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        id: fmt
        run: |
          cd infra/terraform
          terraform fmt -check -recursive .
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          cd infra/terraform/envs/dev
          terraform init

      - name: Terraform Plan
        id: plan
        run: |
          cd infra/terraform/envs/dev
          terraform plan -no-color -out=tfplan
        continue-on-error: true

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: apply
        run: |
          cd infra/terraform/envs/dev
          terraform apply -auto-approve tfplan

      - name: Get Terraform Outputs
        id: outputs
        run: |
          cd infra/terraform/envs/dev
          echo "eks-cluster=$(terraform output -raw eks_cluster_name)" >> $GITHUB_OUTPUT
          echo "ecr-repo=$(terraform output -raw ecr_repository_url)" >> $GITHUB_OUTPUT
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

      - name: Comment PR with Plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('infra/terraform/envs/dev/tfplan', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan\n\`\`\`\n${plan}\n\`\`\``
            });
        continue-on-error: true

  validate:
    name: Terraform Validate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Validate
        run: |
          cd infra/terraform
          terraform init -backend=false
          terraform validate
